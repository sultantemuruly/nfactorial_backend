name: FastAPI CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U sultan"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U $POSTGRES_USER && break
            echo "Waiting for Postgres... ($i/30)"
            sleep 2
          done
      
      - name: (Optional) Test DB connection
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          psql "$DATABASE_URL" -c '\l'
      
      - name: Run tests (optional)
        run: |
          echo "Tests can go here (e.g., pytest)"
          # pytest app/tests/
      
      - name: Build Docker image
        run: docker build -t fastapi-app .
